{"version":3,"sources":["webpack:///./index.js"],"names":["canvas","document","querySelector","range","color","ctx","getContext","rect","getBoundingClientRect","scale","window","devicePixelRatio","width","height","mouseMove$","fromEvent","mouseDown$","mouseUp$","mouseOut$","lineWidth$","pipe","map","e","target","value","startWith","color$","withLatestFrom","_","lineWidth","switchMap","options","x","offsetX","y","offsetY","pairwise","takeUntil","subscribe","from","to","strokeStyle","console","log","beginPath","moveTo","lineTo","stroke"],"mappings":"oHAAA,mHAQMA,EAASC,SAASC,cAAc,WAChCC,EAAQF,SAASC,cAAc,UAC/BE,EAAQH,SAASC,cAAc,UAG/BG,EAAML,EAAOM,WAAW,MAExBC,EAAOP,EAAOQ,wBAEdC,EAAQC,OAAOC,iBAErBX,EAAOY,MAAQL,EAAKK,MAAQH,EAC5BT,EAAOa,OAASN,EAAKM,OAASJ,EAE9BJ,EAAII,MAAMA,EAAMA,GAEhB,IAAMK,EAAaC,YAAUf,EAAQ,aAC/BgB,EAAaD,YAAUf,EAAQ,aAC/BiB,EAAWF,YAAUf,EAAQ,WAC7BkB,EAAYH,YAAUf,EAAQ,YAE9BmB,EAAaJ,YAAUZ,EAAO,SACnCiB,KACGC,aAAI,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,SAClBC,YAAUtB,EAAMqB,QAGdE,EAASX,YAAUX,EAAO,SAC/BgB,KACGC,aAAI,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,SAClBC,YAAUrB,EAAMoB,QAIJR,EACdI,KACEO,YAAeR,EAAWO,GAAO,SAACE,EAAEC,EAAWzB,GAC3C,MAAO,CACHyB,YACAzB,YAGP0B,aAAU,SAACC,GACP,OAAOjB,EACNM,KACGC,aAAI,SAAAC,GAAC,MAAI,CACLU,EAAGV,EAAEW,QACLC,EAAGZ,EAAEa,QACLJ,cAEJK,cACAC,YAAUpB,GACVoB,YAAUnB,QAOdoB,WAAU,YAAgB,IAAdC,EAAc,KAARC,EAAQ,OACED,EAAKR,QAAzBF,EADkB,EAClBA,UAAWzB,EADO,EACPA,MAClBC,EAAIwB,UAAYA,EAChBxB,EAAIoC,YAAcrC,EACjBsC,QAAQC,IAAIJ,GACZlC,EAAIuC,YACJvC,EAAIwC,OAAON,EAAKP,EAAGO,EAAKL,GACxB7B,EAAIyC,OAAON,EAAGR,EAAGQ,EAAGN,GACpB7B,EAAI0C,c","file":"main.dcb1f1a61222b5d095f3.js","sourcesContent":["import 'normalize.css';\r\nimport './scss/main.scss';\r\n\r\n\r\nimport {fromEvent } from 'rxjs';\r\nimport {map, pairwise, switchMap, takeUntil, withLatestFrom, startWith} from 'rxjs/operators'\r\n\r\n\r\nconst canvas = document.querySelector(\"#canvas\");\r\nconst range = document.querySelector(\"#range\");\r\nconst color = document.querySelector(\"#color\");\r\n\r\n\r\nconst ctx = canvas.getContext('2d');\r\n\r\nconst rect = canvas.getBoundingClientRect();\r\n\r\nconst scale = window.devicePixelRatio \r\n\r\ncanvas.width = rect.width * scale;\r\ncanvas.height = rect.height * scale;\r\n\r\nctx.scale(scale,scale);\r\n\r\nconst mouseMove$ = fromEvent(canvas, 'mousemove'); //fromEvent  для сщздания стрима с евента\r\nconst mouseDown$ = fromEvent(canvas, 'mousedown');\r\nconst mouseUp$ = fromEvent(canvas, 'mouseup');\r\nconst mouseOut$ = fromEvent(canvas, 'mouseout');\r\n\r\nconst lineWidth$ = fromEvent(range, 'input')\r\n.pipe(  // метод в котором можна обработать параметри стрима разними операторами rxjs\r\n    map(e => e.target.value), //  вернет только значение value\r\n    startWith(range.value) // для получения базового значения с елемента до начала собития\r\n)\r\n\r\nconst color$ = fromEvent(color, 'input')\r\n.pipe(\r\n    map(e => e.target.value),\r\n    startWith(color.value)\r\n)\r\n\r\n\r\nconst streem$ = mouseDown$\r\n .pipe(\r\n    withLatestFrom(lineWidth$,color$,(_,lineWidth, color)=>{ // для совмещения собития с стримов line и color  и передать их далее в стрим mousemov\r\n        return {\r\n            lineWidth,\r\n            color\r\n        }\r\n    }),\r\n     switchMap((options)=>{ // позволяет переключиться с текущегострима на другой (mouseMove)\r\n         return mouseMove$\r\n         .pipe(\r\n             map(e=> ({\r\n                 x: e.offsetX,\r\n                 y: e.offsetY,\r\n                 options\r\n             })),\r\n             pairwise(), //сщвмещает предидущее собитие с текущим у стриме\r\n             takeUntil(mouseUp$), // преривает текущий стрим при старте стрима mouseUp\r\n             takeUntil(mouseOut$)\r\n             )\r\n     })\r\n     \r\n )\r\n\r\n\r\n streem$.subscribe(([from, to]) => {  // подписуемся на стрим\r\n          const {lineWidth ,color} = from.options\r\n          ctx.lineWidth = lineWidth\r\n          ctx.strokeStyle = color\r\n           console.log(from);\r\n           ctx.beginPath()\r\n           ctx.moveTo(from.x, from.y)\r\n           ctx.lineTo(to.x, to.y)\r\n           ctx.stroke()\r\n       })"],"sourceRoot":""}